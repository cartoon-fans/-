前情回顾

1. 进程对象属性
   pid   进程的PID号
   daemon  父进程退出子进程也退出

2. 自定义的进程类
   继承process --> 重写 __init__和run

3. 进程池
   Pool()
   apply_async()
   close()
   join()

4. 消息队列

   Queue()
   q.put()
   q.get()

5. 线程
   * 使用计算机多个cpu核心
   * 多任务编程手段,(多个任务同时执行互不影响)
   * 运行过程需要消耗资源,资源从进程分得
   * 一个进程可以包含多个线程

   Thread()
   start()
   join()

6. 线程对象属性
   name
   daemon

练习: 开启多个线程,分别从多个目标位置拷贝文件的不同部分,
然后在当前目录下合成一个完整的文件.

提示: os.path.exists()


练习: 分别创建10个进程/线程, 每个 进程/线程 执行一次测试函数
最后统计时间

效率测试
Single cpu: 7.948699474334717
Single io: 4.581757545471191

Thread cpu: 6.669415473937988
Thread io: 5.237887144088745

Process cpu: 3.9380221366882324
Process io: 2.392282247543335


会使用进程线程模块创建进程线程
直到进程线程的作用和提供的好处







